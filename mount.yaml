---
- name: Setup LVM and mount file systems dynamically
  hosts: localhost
  become: yes
  vars_files:
    - ./var.yaml

  tasks:
    - name: Install LVM2 package
      yum:
        name: lvm2
        state: present

    - name: Ensure the device is unmounted
      command: "umount {{ item }}"
      with_items: "{{ pv_devices }}"
      ignore_errors: yes
      tags: lvm

    - name: Wipe existing filesystem signatures
      command: "wipefs -a {{ item }}"
      with_items: "{{ pv_devices }}"
      tags: lvm

    - name: Ensure physical volumes are created
      command: "pvcreate -y -ff {{ item }}"
      with_items: "{{ pv_devices }}"
      tags: lvm

    - name: Check if volume group exists
      command: "vgs {{ vg_name }} --noheadings --options vg_name"
      register: vg_check
      ignore_errors: yes
      tags: lvm

    - name: Create volume group if not exists
      command: "vgcreate {{ vg_name }} {{ pv_devices | join(' ') }}"
      when: vg_check.rc != 0
      tags: lvm

    - name: Extend volume group if it already exists
      command: "vgextend {{ vg_name }} {{ pv_devices | join(' ') }}"
      when: vg_check.rc == 0
      tags: lvm

    - name: Ensure logical volumes are created
      command: "lvcreate -n {{ item.name }} -L {{ item.size }} {{ vg_name }}"
      loop: "{{ lvs }}"
      register: lv_create_results
      ignore_errors: yes
      tags: lvm

    - name: Ensure logical volumes are formatted with XFS
      filesystem:
        fstype: xfs
        dev: "/dev/{{ vg_name }}/{{ item.name }}"
      loop: "{{ lvs }}"
      when: "item.rc == 0"
      loop_control:
        loop_var: lv_item
      register: filesystem_results
      tags: filesystem

    - name: Ensure mount point directories exist
      file:
        path: "{{ item.mount_point }}"
        state: directory
      loop: "{{ lvs }}"
      tags: mount

    - name: Mount logical volumes
      mount:
        path: "{{ item.mount_point }}"
        src: "/dev/{{ vg_name }}/{{ item.name }}"
        fstype: xfs
        opts: defaults
        state: mounted
      loop: "{{ lvs }}"
      when: "item.rc == 0"
      loop_control:
        loop_var: lv_item
      tags: mount
